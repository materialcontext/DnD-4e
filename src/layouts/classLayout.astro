---
import Head from "../components/Head.astro";

const {name, refSource, classTraits,
  classText, suggestions, classFeatures,
} = Astro.props.data;

const traitEntries = Object.entries(classTraits);
let suggestionsEntries = []
if (suggestions) { 
  suggestionsEntries = Object.entries(suggestions.suggestions);
}
const featureEntries = Object.entries(classFeatures);

---
<!DOCTYPE html>
<html>
  <Head name={name}/>
  <body>
    <div class="p-3 bg-ivory">
      <h1 class="name text-ivory">{name}</h1>
      <p class="mb-6 px-2 leading-relaxed">{classText}</p>
      <blockquote class="bg-gainsboro mb-6 pb-2 shadow-sm">
        <h1 class="leading-none  text-xl p-2 font-bold bg-pgl-red text-ivory">Class Traits</h1>
        <ul class="px-2 text-base">
          {traitEntries.map(([key, value]) => {
            key = (key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')).trim();
            return <li class="pb-1 font-light "><b class="font-bold pr-2">{key}</b>{value}</li>
          })}
        </ul>
      </blockquote>
      { suggestions && 
          <div>
            <p>{suggestions.overview}</p>
            <ul>
              {suggestionsEntries.map(([key, value]) => {
                key = (key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')).trim();
                return <li>
                <h3 class="font-bold text-base mt-4 leading-none">{key}</h3>
                <p class="my-2">{value["overview"] && value["overview"]}</p>
                <ul class="px-4">
                  {value["classFeature"] && <li class="flex">Class Feature: <p class="ml-1">{value["classFeature"] && value["classFeature"]}</p></li>}
                  <li class="flex">Suggested Feat:<p class="ml-1">{value["suggestedFeat"]}</p></li>
                  <li class="flex">Suggested Skills:<p class="ml-1">{value["suggestedSkills"]}</p></li>
                  <li class="flex">Suggested At-Will Powers:<p class="ml-1">{value["suggestedAtWillPowers"]}</p></li>
                  <li class="flex">Suggested Encounter Powers:<p class="ml-1">{value["suggestedEncounterPowers"]}</p></li>
                  <li class="flex">Suggested Daily Powers:<p class="ml-1">{value["suggestedDailyPowers"]}</p></li>
                </ul>
              </li>
              })}
            </ul>
          </div>
      }
      <h1 class="text-xl font-bold mt-6 text-black">Class Features</h1>
      <ul class="ml-3">
        {featureEntries.map(([key, value]) => {
          key = (key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')).trim();
          if (typeof value === "string") {
            return <li class="pb-1 font-light"><b class="font-bold pr-2">{key}:</b>{value}</li>
          } else {
            return <li class="pb-1 font-light mt-2"><b class="font-bold pr-2">{key}:</b>{value["overview"]}
              <ul class="ml-8 mt-2 list-disc">
                {Object.entries(value["options"]).map(([name, text]) => {
                  return <li class="pb-1 font-light"><b class="font-normal pr-2">
                    {name.charAt(0).toUpperCase() + name.slice(1).replace(/([A-Z])/g, ' $1').trim()}:</b>{text}
                    </li>
                })}
              </ul>
            </li>
          }
        })}
      </ul>
      <p class="mt-4 mb-2 italic text-sm">{refSource}</p>
    </div>
  </body>
</html>
