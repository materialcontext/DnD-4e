---
import toCamelCase from "../../utils/toCamelCase";
import PowerLayout from "../../layouts/powerLayout.astro";

export async function getStaticPaths() {
    const paths = await Astro.glob('../../../data/powers/*.json').then((res) => {
        return res.map((path) => {
            return {
                params: {
                    slug: toCamelCase(path.name)
                }
            }
        })
    })
};

let response = await import(`../../../data/powers/${Astro.params.slug}.json`).then((res) => res.default);
let data = await response;

const entries = Object.entries(data).map(([key, value]) => {
  let bonusPower = value["bonusPower"];
  let power = value;
  delete power["bonusPower"];
  return [key, [power, bonusPower]]
 });
---

{
  entries.map(([key, value]) => {
    return value[1] ? (
        <PowerLayout data={value[0]}/>
        <PowerLayout data={value[1]}/>
        ) : <PowerLayout data={value[0]}/>
  })
}